// License:
// 	General/UWN.neilbundle/_NeilBundle.neil
// 	UWN
// 	version: 24.12.30
// 
// 	Copyright (C) 2024 Jeroen P. Broks
// 
// 	This software is provided 'as-is', without any express or implied
// 	warranty.  In no event will the authors be held liable for any damages
// 	arising from the use of this software.
// 
// 	Permission is granted to anyone to use this software for any purpose,
// 	including commercial applications, and to alter it and redistribute it
// 	freely, subject to the following restrictions:
// 
// 	1. The origin of this software must not be misrepresented; you must not
// 	   claim that you wrote the original software. If you use this software
// 	   in a product, an acknowledgment in the product documentation would be
// 	   appreciated but is not required.
// 	2. Altered source versions must be plainly marked as such, and must not be
// 	   misrepresented as being the original software.
// 	3. This notice may not be removed or altered from any source distribution.
// End License


// UWN = Use When Needed

#define debug_uwn

Var Reg

Var GetModule(string m)
	m = m:upper()
	Reg = Reg || {}
	#if debug_uwn
	If !Reg[m]
		print(ApolloState.Name.."> Compiling: "..m)
	End
	#fi
	Reg[m] = Reg[m] || NeilUse(m)
	Return Reg[m]
End


Void Err(s,string k, v)
	Lua.error("Cannot assign %s (%s) to key %k in UWN module. All of that is read-only!",Lua.type(v),Lua.tostring(v),k)
End

Var _UWN(string path)
	if !suffixed(path,"/")
		path += "/"
	End
	Var idx(s,string k)		
		Return GetModule(path..k)
	End
	return Lua.setmetatable({},{["__index"]=idx,["__newindex"]=Err})
End

Return _UWN
